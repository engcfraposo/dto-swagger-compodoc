var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.293,1,1.502]],["body/controllers/AppController.html",[0,1.889,1,2.195,2,1.445,3,0.585,4,0.488,5,0.488,6,2.364,7,0.691,8,1.889,9,3.652,10,1.445,11,0.055,12,0.938,13,2.959,14,1.445,15,1.635,16,0.765,17,0.938,18,1.821,19,2.364,20,0.585,21,0.164,22,2.364,23,1.972,24,1.083,25,2.959,26,0.041,27,0.041]],["title/modules/AppModule.html",[28,1.502,29,1.502]],["body/modules/AppModule.html",[1,2.174,2,1.617,3,0.465,4,0.388,5,0.388,11,0.055,16,0.899,17,0.746,18,1.92,19,1.88,20,0.465,21,0.131,26,0.035,27,0.035,28,1.879,29,2.705,30,1.149,31,1.617,32,1.88,33,1.88,34,1.88,35,2.219,36,2.207,37,1.568,38,1.568,39,2.354,40,2.645,41,2.645,42,2.354,43,2.354,44,1.88,45,1.335,46,1.049,47,2.354,48,2.354,49,0.643,50,2.354,51,2.354,52,2.354,53,1.568,54,2.354,55,2.354]],["title/injectables/AppService.html",[18,1.118,56,0.969]],["body/injectables/AppService.html",[3,0.626,4,0.522,5,0.522,7,0.74,8,1.974,9,3.747,11,0.054,12,1.004,14,1.547,15,1.708,16,0.626,17,1.004,18,1.708,20,0.626,21,0.176,24,1.16,26,0.042,27,0.042,56,1.48,57,1.797,58,2.531,59,3.168,60,3.168,61,3.168]],["title/classes/CreateUserDto.html",[21,0.147,62,0.839]],["body/classes/CreateUserDto.html",[3,0.385,4,0.321,5,0.321,7,0.455,10,1.68,11,0.055,12,1.09,15,1.608,16,0.68,20,0.385,21,0.16,24,0.712,26,0.03,27,0.03,46,0.914,49,0.939,62,1.206,63,1.104,64,3.04,65,1.297,66,1.409,67,2.709,68,1.409,69,2.306,70,1.717,71,3.441,72,4.258,73,3.806,74,1.946,75,1.946,76,1.637,77,2.886,78,2.886,79,1.946,80,1.946,81,1.946,82,3.04,83,1.104,84,2.886,85,3.441,86,1.946,87,2.886,88,1.555,89,1.104,90,2.292,91,1.946,92,1.946,93,1.555,94,1.104,95,2.306,96,1.104,97,1.297,98,1.297,99,1.297,100,1.297,101,1.297,102,1.297]],["title/classes/UpdateUserDto.html",[21,0.147,103,1.293]],["body/classes/UpdateUserDto.html",[3,0.669,4,0.558,5,0.558,11,0.054,16,0.834,20,0.669,21,0.188,26,0.044,27,0.044,62,1.072,63,1.92,65,2.255,103,2.058,104,2.704,105,3.385,106,2.704,107,2.704,108,2.255,109,1.653,110,3.385,111,3.385]],["title/entities/User.html",[46,0.839,112,1.293]],["body/entities/User.html",[3,0.468,4,0.39,5,0.39,7,0.552,10,1.876,11,0.055,12,1.217,15,1.76,16,0.657,20,0.468,21,0.131,24,0.866,26,0.035,27,0.035,46,1.32,49,1.049,53,1.576,62,1.053,66,1.622,67,2.56,69,2.179,70,1.623,76,1.885,94,1.342,96,1.342,97,1.576,98,1.576,99,1.576,100,1.576,101,1.576,102,1.576,109,1.155,112,2.035,113,1.889,114,4.39,115,2.365,116,3.842,117,2.365,118,2.365,119,1.576,120,1.342,121,1.889]],["title/injectables/UserMapper.html",[56,0.969,122,1.118]],["body/injectables/UserMapper.html",[3,0.404,4,0.337,5,0.337,7,0.477,8,1.461,11,0.056,12,0.948,14,1.461,16,0.77,17,0.647,20,0.404,21,0.113,24,1.095,26,0.031,27,0.031,46,1.418,49,0.817,56,1.095,57,1.159,62,1.418,68,1.461,70,1.264,89,1.159,93,2.389,94,1.697,95,2.827,96,1.697,97,2.358,98,1.993,99,1.993,100,1.993,101,1.993,102,1.993,103,1.902,109,1.461,112,1.728,120,1.159,121,2.389,122,1.264,123,1.632,124,2.991,125,2.991,126,2.043,127,1.697,128,2.043,129,1.632,130,2.043]],["title/controllers/UsersController.html",[0,1.293,131,1.502]],["body/controllers/UsersController.html",[0,0.973,2,0.973,3,0.394,4,0.329,5,0.329,7,0.466,8,1.434,10,1.704,11,0.055,12,1.105,14,1.704,15,1.474,16,0.849,17,0.631,20,0.394,21,0.111,22,1.592,23,1.328,24,1.277,26,0.031,27,0.031,49,0.802,62,1.361,68,1.434,69,1.667,70,1.241,83,1.131,108,1.957,109,0.973,120,1.131,127,1.667,131,1.667,132,1.592,133,1.993,134,1.993,135,3.076,136,2.347,137,1.993,138,1.993,139,1.993,140,1.993,141,1.592,142,2.938,143,1.993,144,2.938,145,1.993,146,1.993,147,1.474,148,1.592,149,1.993,150,1.993,151,1.993,152,1.131,153,1.993,154,1.993,155,1.957,156,1.993,157,1.993,158,1.993,159,1.993,160,1.993,161,1.993,162,1.993,163,1.993]],["title/modules/UsersModule.html",[28,1.502,35,1.293]],["body/modules/UsersModule.html",[2,1.691,3,0.496,4,0.414,5,0.414,11,0.055,16,0.917,17,0.795,20,0.496,21,0.139,26,0.036,27,0.036,28,1.964,30,1.225,31,1.691,35,2.365,36,2.307,37,1.672,38,1.672,40,2.766,41,2.004,44,2.004,45,1.423,46,0.795,89,1.423,122,1.959,131,2.249,147,1.959,148,2.004,164,2.004,165,2.004,166,2.509,167,2.509,168,2.004,169,2.509]],["title/injectables/UsersService.html",[56,0.969,147,1.118]],["body/injectables/UsersService.html",[3,0.337,4,0.281,5,0.281,7,0.398,8,1.275,11,0.055,12,1.128,14,1.55,16,0.833,17,0.54,20,0.337,21,0.095,23,1.74,24,1.163,26,0.027,27,0.027,45,0.967,46,1.006,49,0.867,56,0.956,57,0.967,62,0.54,68,1.55,69,1.482,70,1.342,76,1.801,89,0.967,94,2.019,103,1.874,108,1.74,109,1.275,112,0.832,119,1.136,120,0.967,122,1.781,127,1.801,129,1.362,135,2.843,136,2.086,141,2.086,147,1.103,168,1.362,170,1.362,171,4.458,172,2.612,173,1.705,174,2.843,175,1.705,176,2.612,177,2.612,178,1.705,179,3.176,180,1.705,181,1.705,182,1.705,183,1.705,184,2.612,185,1.705,186,3.176,187,1.705,188,3.176,189,1.705,190,1.705,191,1.705,192,1.705]],["title/classes/ValidatateErrors.html",[21,0.147,152,1.502]],["body/classes/ValidatateErrors.html",[3,0.484,4,0.404,5,0.404,7,0.572,10,1.91,11,0.054,12,1.24,15,1.878,16,0.484,20,0.484,21,0.136,26,0.036,27,0.036,49,1.155,63,1.388,66,1.662,67,2.267,76,1.931,82,3.378,83,1.388,152,1.931,193,3.378,194,1.955,195,3.913,196,3.913,197,3.913,198,3.403,199,3.403,200,3.403,201,2.447,202,2.447,203,3.403,204,4.229,205,2.447,206,3.403,207,2.447]],["title/coverage.html",[208,2.393]],["body/coverage.html",[0,1.612,1,1.329,5,0.386,6,1.871,11,0.054,18,0.99,21,0.212,26,0.035,27,0.035,46,0.742,49,0.64,56,1.399,58,1.871,62,0.742,64,1.871,65,2.199,96,1.329,103,1.144,104,1.871,112,1.144,113,1.871,122,0.99,123,1.871,131,1.329,132,1.871,147,0.99,152,1.329,155,1.561,170,1.871,193,1.871,194,1.871,208,1.561,209,2.343,210,2.343,211,2.343,212,5.048,213,3.301,214,1.871,215,4.149,216,1.871,217,4.538,218,1.871,219,1.871,220,3.822,221,2.343,222,1.871,223,2.343,224,1.871,225,1.871,226,2.343,227,2.343]],["title/dependencies.html",[31,1.552,228,1.774]],["body/dependencies.html",[11,0.056,17,0.943,21,0.216,26,0.041,27,0.041,31,1.454,45,1.689,83,1.689,88,2.378,106,2.378,107,2.378,119,1.984,229,2.977,230,2.977,231,4.323,232,2.977,233,2.977,234,2.977,235,2.977,236,2.977,237,2.977,238,2.977,239,2.977,240,2.977,241,2.977,242,2.977,243,2.977,244,2.977,245,2.977,246,2.977,247,2.977]],["title/miscellaneous/functions.html",[248,1.774,249,2.539]],["body/miscellaneous/functions.html",[7,0.722,11,0.049,26,0.042,27,0.042,49,1.086,68,1.942,70,1.681,127,2.257,155,2.932,214,2.467,216,3.515,218,2.467,219,3.178,222,2.467,224,2.467,225,3.178,248,2.467,249,2.467,250,3.089,251,3.089,252,3.089,253,3.089,254,3.089,255,4.647,256,3.178,257,3.089]],["title/index.html",[7,0.519,258,2.221,259,2.221]],["body/index.html",[4,0.383,11,0.054,26,0.034,27,0.034,90,1.546,174,1.854,208,1.546,256,1.854,260,2.321,261,2.321,262,3.279,263,2.321,264,2.321,265,2.321,266,2.321,267,2.321,268,2.321,269,3.802,270,2.321,271,2.321,272,2.321,273,4.651,274,2.321,275,2.321,276,4.525,277,2.321,278,2.321,279,3.279,280,2.321,281,2.321,282,2.321,283,2.321,284,3.279,285,3.279,286,2.321,287,2.321,288,2.321,289,3.279,290,3.279,291,2.321,292,2.321,293,2.321,294,2.321,295,2.321,296,1.854,297,2.321,298,2.321,299,2.321,300,2.321,301,2.321,302,2.321,303,2.321,304,2.321,305,2.321,306,2.321,307,1.854,308,2.321,309,2.321,310,2.321,311,2.321,312,2.321,313,2.321,314,1.854]],["title/modules.html",[30,1.754]],["body/modules.html",[11,0.047,26,0.047,27,0.047,29,2.124,30,1.828,35,1.828,296,3.581,315,4.483,316,4.483,317,4.483]],["title/overview.html",[318,2.869]],["body/overview.html",[2,1.428,11,0.051,18,1.811,26,0.04,27,0.04,29,2.751,30,1.428,31,1.874,32,2.336,33,2.336,34,2.336,35,2.414,36,2.558,37,1.948,38,1.948,53,1.948,57,1.659,63,1.659,122,1.811,147,1.811,164,2.336,165,2.336,318,2.336,319,3.839,320,2.924,321,3.839]],["title/properties.html",[66,1.552,228,1.774]],["body/properties.html",[11,0.054,26,0.047,27,0.047,66,1.828,90,2.494,307,2.99,314,2.99,322,3.744,323,3.744,324,3.744]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":323,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["0.3.14",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":320,"title":{},"body":{"overview.html":{}}}],["1.1.19",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":319,"title":{},"body":{"overview.html":{}}}],["3",{"_index":321,"title":{},"body":{"overview.html":{}}}],["400",{"_index":206,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["5.1.6",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":297,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":149,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":82,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ValidatateErrors.html":{}}}],["apiproperty({description",{"_index":71,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":198,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["apiproperty({type",{"_index":202,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["apiresponse",{"_index":150,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":151,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":158,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":268,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":171,"title":{},"body":{"injectables/UsersService.html":{}}}],["author",{"_index":307,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":186,"title":{},"body":{"injectables/UsersService.html":{}}}],["backers",{"_index":298,"title":{},"body":{"index.html":{}}}],["bad",{"_index":199,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":216,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":317,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":315,"title":{},"body":{"modules.html":{}}}],["building",{"_index":263,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidatateErrors.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":63,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidatateErrors.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":164,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":165,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":114,"title":{},"body":{"entities/User.html":{}}}],["compodoc/compodoc",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":172,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":173,"title":{},"body":{"injectables/UsersService.html":{}}}],["contoso",{"_index":91,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["contoso'})@isstring()@isnotempty",{"_index":80,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["contoso@contoso.com",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["contoso@contoso.com'})@isemail()@isnotempty",{"_index":74,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":157,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":208,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":108,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":159,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":137,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(updateuserdto",{"_index":177,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":62,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["database.sqlite",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/ValidatateErrors.html":{}}}],["default",{"_index":73,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":90,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":275,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserMapper.html":{}}}],["dto.email",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{}}}],["dto.id",{"_index":97,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{}}}],["dto.name",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{}}}],["dto/create",{"_index":120,"title":{},"body":{"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":129,"title":{},"body":{"injectables/UserMapper.html":{},"injectables/UsersService.html":{}}}],["dto/valdate",{"_index":153,"title":{},"body":{"controllers/UsersController.html":{}}}],["e2e",{"_index":286,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":264,"title":{},"body":{"index.html":{}}}],["email",{"_index":67,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/ValidatateErrors.html":{}}}],["entities",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":89,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserMapper.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":112,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"injectables/UserMapper.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["entity.email",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{}}}],["entity.id",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{}}}],["entity.name",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{}}}],["error",{"_index":195,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["errors.dto",{"_index":154,"title":{},"body":{"controllers/UsersController.html":{}}}],["errors.dto.ts",{"_index":194,"title":{},"body":{"classes/ValidatateErrors.html":{},"coverage.html":{}}}],["errors.dto.ts:5",{"_index":207,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["errors.dto.ts:7",{"_index":201,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["errors.dto.ts:9",{"_index":205,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["example",{"_index":204,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{}}}],["express",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":110,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false",{"_index":78,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{}}}],["findall",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":162,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":262,"title":{},"body":{"index.html":{}}}],["function",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":249,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":142,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":258,"title":{"index.html":{}},"body":{}}],["grow",{"_index":293,"title":{},"body":{"index.html":{}}}],["hello",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":304,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":311,"title":{},"body":{"index.html":{}}}],["id",{"_index":69,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/UserMapper.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UserMapper.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserMapper.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":182,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":183,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":272,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":274,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":84,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":85,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":86,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":87,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":300,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":308,"title":{},"body":{"index.html":{}}}],["license",{"_index":314,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":290,"title":{},"body":{"index.html":{}}}],["listuser",{"_index":189,"title":{},"body":{"injectables/UsersService.html":{}}}],["listuser.map((user",{"_index":191,"title":{},"body":{"injectables/UsersService.html":{}}}],["mapper/user.mapper",{"_index":168,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":196,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["metadata",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":248,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":289,"title":{},"body":{"index.html":{}}}],["mode",{"_index":279,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":303,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":309,"title":{},"body":{"index.html":{}}}],["name",{"_index":70,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":269,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":313,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":106,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":83,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidatateErrors.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":96,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"coverage.html":{}}}],["node.js",{"_index":261,"title":{},"body":{"index.html":{}}}],["npm",{"_index":273,"title":{},"body":{"index.html":{}}}],["null",{"_index":130,"title":{},"body":{"injectables/UserMapper.html":{}}}],["number",{"_index":76,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{}}}],["open",{"_index":291,"title":{},"body":{"index.html":{}}}],["optional",{"_index":68,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":318,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":228,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":146,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":105,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":111,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["please",{"_index":301,"title":{},"body":{"index.html":{}}}],["post",{"_index":144,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":116,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":184,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":281,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":260,"title":{},"body":{"index.html":{}}}],["project",{"_index":292,"title":{},"body":{"index.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/ValidatateErrors.html":{},"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":302,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":174,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["request",{"_index":200,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["required",{"_index":77,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":276,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":265,"title":{},"body":{"index.html":{}}}],["server",{"_index":266,"title":{},"body":{"index.html":{}}}],["side",{"_index":267,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"index.html":{}}}],["sponsors",{"_index":295,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["sqlite3",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["src/.../main.ts",{"_index":250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.swagger.ts",{"_index":252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validation.ts",{"_index":253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":214,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger.ts",{"_index":218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":64,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":104,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/valdate",{"_index":193,"title":{},"body":{"classes/ValidatateErrors.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":113,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":115,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":117,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":118,"title":{},"body":{"entities/User.html":{}}}],["src/users/mapper/user.mapper.ts",{"_index":123,"title":{},"body":{"injectables/UserMapper.html":{},"coverage.html":{}}}],["src/users/mapper/user.mapper.ts:16",{"_index":128,"title":{},"body":{"injectables/UserMapper.html":{}}}],["src/users/mapper/user.mapper.ts:8",{"_index":126,"title":{},"body":{"injectables/UserMapper.html":{}}}],["src/users/swagger/user.swagger.ts",{"_index":222,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/users.controller.ts",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:15",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:20",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:25",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":166,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":170,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":175,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":178,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":180,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":181,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/validation.ts",{"_index":224,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":277,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":280,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":282,"title":{},"body":{"index.html":{}}}],["started",{"_index":259,"title":{"index.html":{}},"body":{}}],["starter",{"_index":271,"title":{},"body":{"index.html":{}}}],["statements",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":197,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["stay",{"_index":305,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/ValidatateErrors.html":{}}}],["support",{"_index":296,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":316,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["swagger(app",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["swagger/user.swagger",{"_index":156,"title":{},"body":{"controllers/UsersController.html":{}}}],["swaggerpostuser",{"_index":155,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["swaggerpostuser()@post",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{}}}],["synchronize",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":285,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":288,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":287,"title":{},"body":{"index.html":{}}}],["tests",{"_index":284,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":294,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.usermapper.todto(user",{"_index":188,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermapper.toentity(updateuserdto",{"_index":185,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":190,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findoneby",{"_index":192,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(entity",{"_index":187,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":160,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":161,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":163,"title":{},"body":{"controllers/UsersController.html":{}}}],["todto",{"_index":124,"title":{},"body":{"injectables/UserMapper.html":{}}}],["todto(entity",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserMapper.html":{}}}],["toentity",{"_index":125,"title":{},"body":{"injectables/UserMapper.html":{}}}],["toentity(dto",{"_index":121,"title":{},"body":{"entities/User.html":{},"injectables/UserMapper.html":{}}}],["touch",{"_index":306,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":312,"title":{},"body":{"index.html":{}}}],["type",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeorm",{"_index":119,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":169,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":107,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":270,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"classes/ValidatateErrors.html":{}}}],["unit",{"_index":283,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":179,"title":{},"body":{"injectables/UsersService.html":{}}}],["unlicensed",{"_index":324,"title":{},"body":{"properties.html":{}}}],["updateuserdto",{"_index":103,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UserMapper.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user",{"_index":46,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":72,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto",{"_index":109,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":65,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":81,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":75,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":79,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["usermapper",{"_index":122,"title":{"injectables/UserMapper.html":{}},"body":{"injectables/UserMapper.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userrepository",{"_index":176,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":167,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":148,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":131,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":35,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":147,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validatateerrors",{"_index":152,"title":{"classes/ValidatateErrors.html":{}},"body":{"controllers/UsersController.html":{},"classes/ValidatateErrors.html":{},"coverage.html":{}}}],["validation",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validation(app",{"_index":257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":88,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["version",{"_index":322,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":278,"title":{},"body":{"index.html":{}}}],["website",{"_index":310,"title":{},"body":{"index.html":{}}}],["world",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":299,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './users/entities/user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'sqlite',\n      database: 'database.sqlite',\n      entities: [User],\n      synchronize: true,\n    }),\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'user's email', default: 'contoso@contoso.com'})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'user's id', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'user's name', default: 'Contoso'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsNumber, IsString } from 'class-validator';\n//import { User } from '../entities/user.entity';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: \"user's id\", required: false })\n  id?: number;\n\n  @ApiProperty({ description: \"user's name\", default: 'Contoso' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ description: \"user's email\", default: 'contoso@contoso.com' })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  //toDTO(entity: User): CreateUserDto {\n  //const dto = new CreateUserDto();\n  //dto.id = entity.id;\n  //dto.name = entity.name;\n  //dto.email = entity.email;\n  //return dto;\n  //}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { CreateUserDto } from '../dto/create-user.dto';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  name: string;\n  @Column()\n  email: string;\n\n  toEntity(dto: CreateUserDto): User {\n    const entity = new User();\n    entity.id = dto.id;\n    entity.name = dto.name;\n    entity.email = dto.email;\n    return entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMapper.html":{"url":"injectables/UserMapper.html","title":"injectable - UserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/mapper/user.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toDTO\n                            \n                            \n                                toEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toDTO\n                        \n                    \n                \n            \n            \n                \ntoDTO(entity: User)\n                \n            \n\n\n            \n                \n                    Defined in src/users/mapper/user.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CreateUserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toEntity\n                        \n                    \n                \n            \n            \n                \ntoEntity(dto: CreateUserDto | UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/mapper/user.mapper.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto | UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { User } from '../entities/user.entity';\nimport { UpdateUserDto } from '../dto/update-user.dto';\n\n@Injectable()\nexport class UserMapper {\n  toDTO(entity: User): CreateUserDto {\n    const dto = new CreateUserDto();\n    dto.id = entity.id;\n    dto.name = entity.name;\n    dto.email = entity.email;\n    return dto;\n  }\n\n  toEntity(dto: CreateUserDto | UpdateUserDto): User {\n    const entity = new User();\n    entity.id = dto.id ? dto.id : null;\n    entity.name = dto.name;\n    entity.email = dto.email;\n    return entity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SwaggerPostUser()@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ValidatateErrors } from './dto/valdate-errors.dto';\nimport { SwaggerPostUser } from './swagger/user.swagger';\n\n@Controller('users')\n@ApiTags('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @SwaggerPostUser()\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserMapper\n\nUserMapper\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUserMapper->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserMapper\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { UserMapper } from './mapper/user.mapper';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService, UserMapper],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, userMapper: UserMapper)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userMapper\n                                                  \n                                                        \n                                                                        UserMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { UserMapper } from './mapper/user.mapper';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly userMapper: UserMapper,\n  ) {}\n  async create(updateUserDto: UpdateUserDto) {\n    const entity = this.userMapper.toEntity(updateUserDto);\n    const user = await this.userRepository.save(entity);\n    return this.userMapper.toDTO(user);\n  }\n\n  async findAll() {\n    const listUser = await this.userRepository.find();\n    return listUser.map((user) => this.userMapper.toDTO(user));\n  }\n\n  async findOne(id: number) {\n    const user = await this.userRepository.findOneBy({ id });\n    return this.userMapper.toDTO(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidatateErrors.html":{"url":"classes/ValidatateErrors.html","title":"class - ValidatateErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidatateErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/valdate-errors.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Bad Request'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/valdate-errors.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/valdate-errors.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 400})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/valdate-errors.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class ValidatateErrors {\n  @ApiProperty({ example: 400 })\n  statusCode: number;\n  @ApiProperty({ example: 'Bad Request' })\n  error: string;\n  @ApiProperty({ type: [String], example: ['email must be an email'] })\n  message: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/valdate-errors.dto.ts\n            \n            class\n            ValidatateErrors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/mapper/user.mapper.ts\n            \n            injectable\n            UserMapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/swagger/user.swagger.ts\n            \n            function\n            SwaggerPostUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/validation.ts\n            \n            function\n            validation\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sqlite3 : ^5.1.6\n        \n            typeorm : ^0.3.14\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            swagger   (src/.../swagger.ts)\n                        \n                        \n                            SwaggerPostUser   (src/.../user.swagger.ts)\n                        \n                        \n                            validation   (src/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swagger\n                        \n                    \n                \n            \n            \n                \nswagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/users/swagger/user.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SwaggerPostUser\n                        \n                    \n                \n            \n            \n                \nSwaggerPostUser()\n                \n            \n\n\n\n\n        \n    \n    src/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validation\n                        \n                    \n                \n            \n            \n                \nvalidation(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserMapper\n\nUserMapper\n\nUsersModule -->\n\nUserMapper->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
